name: refarch-stack

services:
  postgres:
    image: postgres:16.4-alpine3.20@sha256:5660c2cbfea50c7a9127d17dc4e48543eedd3d7a41a595a2dfa572471e37e64c
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    ports:
      - "5432:5432"
    healthcheck: &healthcheck
      test: ["CMD-SHELL", "pg_isready -d postgres -U admin"]
      interval: 30s
      timeout: 60s
      retries: 3
      start_period: 60s
    security_opt: &security_settings
      - no-new-privileges:true

  # see https://event-driven.io/en/automatically_connect_pgadmin_to_database/
  pg-admin:
    image: dpage/pgadmin4:8.12@sha256:585350593e8b0483941fa9a2d5ebb04b88a66e83a7b5603c169f9446b271312f
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
      - PGADMIN_LISTEN_PORT=5050
    ports:
      - "5050:5050"
    depends_on:
      - postgres
    healthcheck:
      <<: *healthcheck
      test: ["CMD", "wget", "-O", "-", "http://localhost:5050/misc/ping"]
    security_opt: *security_settings
    volumes:
      - './pgadmin/servers.json:/pgadmin4/servers.json:ro'
      - './pgadmin/pgpass:/pgadmin4/pgpass'
    user: root # see https://github.com/pgadmin-org/pgadmin4/issues/6257
    entrypoint: /bin/sh -c "chmod 600 /pgadmin4/pgpass; /entrypoint.sh;" # see https://www.postgresql.org/docs/current/libpq-pgpass.html#LIBPQ-PGPASS (last paragraph)

  keycloak:
    image: quay.io/keycloak/keycloak:20.0.5@sha256:054ef67eb7dae0129bbb9eb0e0797fd2392cd6d135094a6063ae7ff7773ef81f
    command:
      - start-dev --http-relative-path /auth
    depends_on:
      - db-postgres-keycloak
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_HOSTNAME_STRICT=false
      - KC_HEALTH_ENABLED=true
      - KC_HTTP_PORT=8100
      - DB=postgres
      - DB_URL=jdbc:postgresql://db-postgres-keycloak:5432/keycloak
      - DB_USERNAME=keycloak-user
      - DB_PASSWORD=keycloak-secret
    ports:
      - "8100:8100"
    networks:
      - keycloak
    healthcheck:
      <<: *healthcheck
      test: ["CMD-SHELL",  "curl http://localhost:8100/auth/health/live"]
    security_opt: *security_settings

  db-postgres-keycloak:
    image: postgres:16.4-alpine3.20@sha256:5660c2cbfea50c7a9127d17dc4e48543eedd3d7a41a595a2dfa572471e37e64c
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak-user
      - POSTGRES_PASSWORD=keycloak-secret
    networks:
      - keycloak
    healthcheck:
      <<: *healthcheck
      test: [ "CMD-SHELL", "pg_isready -d keycloak -U keycloak-user" ]
    security_opt: *security_settings

  init-keycloak:
    image: klg71/keycloakmigration:0.2.72@sha256:48a3e0b9b98a087f5f651a5462330cf0aefd1101936bfbf67b3ee3f9815eb289
    depends_on:
      - keycloak
    environment:
      ADMIN_USER: admin
      ADMIN_PASSWORD: admin
      BASEURL: http://keycloak:8100/auth
      WAIT_FOR_KEYCLOAK: 'true'
      KEYCLOAK_CHANGELOG: /migration/keycloak-changelog.yml
    volumes:
      - './keycloak/migration:/migration'
    networks:
      - keycloak
    security_opt: *security_settings

  refarch-gateway:
    image: ghcr.io/it-at-m/refarch/refarch-gateway:1.3.1@sha256:702d063d7141bb79af0107956b699c7771d0a91128f7622bdadc771911b94fca
    depends_on:
      init-keycloak:
        condition: service_completed_successfully
    ports:
      - "8083:8080"
    environment:
    - ALLOWED_ORIGINS_PUBLIC=http://localhost:*
    - ALLOWED_ORIGINS_CLIENTS=http://localhost:*
    - SPRING_CLOUD_GATEWAY_ROUTES_0_ID=sso
    - SPRING_CLOUD_GATEWAY_ROUTES_0_URI=http://keycloak:8100/
    - SPRING_CLOUD_GATEWAY_ROUTES_0_PREDICATES_0=Path=/api/sso/userinfo
    - SPRING_CLOUD_GATEWAY_ROUTES_0_FILTERS_0=RewritePath=/api/sso/userinfo, /auth/realms/local_realm/protocol/openid-connect/userinfo
    - SPRING_CLOUD_GATEWAY_ROUTES_1_ID=backend
    - SPRING_CLOUD_GATEWAY_ROUTES_1_URI=http://host.docker.internal:39146/
    - SPRING_CLOUD_GATEWAY_ROUTES_1_PREDICATES_0=Path=/api/backend-service/**
    - SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_0=RewritePath=/api/backend-service/(?<urlsegments>.*), /$\{urlsegments}
    - SPRING_PROFILES_ACTIVE=hazelcast-local
    - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUERURI=http://keycloak:8100/auth/realms/local_realm
    - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_SSO_ISSUERURI=$${spring.security.oauth2.resourceserver.jwt.issuer-uri}
    - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_SSO_PROVIDER=sso
    - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_SSO_CLIENTID=local
    - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_SSO_CLIENTSECRET=client_secret
    - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_SSO_SCOPE=profile, openid
    networks:
      - keycloak
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      <<: *healthcheck
      test: [ "CMD-SHELL", "curl http://localhost:8080/actuator/health/liveness" ]
    security_opt: *security_settings

  appswitcher-server:
    image: ghcr.io/it-at-m/appswitcher-server:1.1.1@sha256:db333ba06620b3b45f730651c95a0969942bf839bcb74695b5b6875d365a6f08
    environment:
      - SPRING_WEB_RESOURCES_STATIC_LOCATIONS=file:/workspace/static
    ports:
      - "8084:8080"
    volumes:
      - "./appswitcher-server/application.yml:/workspace/config/application.yml"
      - "./appswitcher-server/static:/workspace/static"
    healthcheck:
      <<: *healthcheck
      test: ["CMD-SHELL", "curl http://localhost:8080/actuator/health/liveness"]
    security_opt: *security_settings

networks:
  keycloak:
