id: add client
author: Default
realm: ${SSO_REALM}
changes:
  - addSimpleClient:
      clientId: ${SSO_CLIENT_ID}
      secret: ${SSO_CLIENT_SECRET}
      publicClient: false
      redirectUris:
        - http://*
        - https://*

    # maps user attribute user_name to a claim user_name
  - addClientUserAttributeMapper:
      clientId: ${SSO_CLIENT_ID}
      name: user_name
      userAttribute: user_name
      claimName: user_name
      addToUserInfo: true
      addToAccessToken: true

  # Maps user client roles of current client into a claim "authorities"
  - addClientMapper:
      clientId: ${SSO_CLIENT_ID}
      name: userClientAuthorities
      protocolMapper: oidc-usermodel-client-role-mapper
      config:
        access.token.claim: true
        id.token.claim: true
        userinfo.token.claim: true
        jsonType.label: String
        multivalued: true
        claim.name: "authorities"
        usermodel.clientRoleMapping.clientId: ${SSO_CLIENT_ID}
        usermodel.clientRoleMapping.rolePrefix: ""

  # !!! very import must have. Without that default scope u dont have access to userinfo-endpoint
  - assignDefaultClientScope:
      clientId: ${SSO_CLIENT_ID}
      clientScopeName: openid