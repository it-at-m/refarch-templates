name: Npm Release

on:
  workflow_dispatch:
    inputs:
      release-version:
        type: choice
        description: "Select version increment type (follows Semantic Versioning)"
        required: true
        options:
          - patch
          - minor
          - major
      app-path:
        type: choice
        description: "Select the node service to release"
        required: true
        default: refarch-frontend
        options:
          - refarch-frontend # Add or modify frontend paths according to your project structure
      skip-deployment:
        default: true
        type: boolean
        description: "skip deployment to npm registry"
jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    outputs:
      ARTIFACT_NAME: ${{ steps.node.outputs.artifact-name }}
      ARTIFACT_VERSION: ${{steps.npm_release.outputs.ARTIFACT_VERSION}}
    steps:
      - id: npm_release
        uses: it-at-m/lhm_actions/action-templates/actions/action-npm-release@main
        with:
          app-path: ${{inputs.app-path}}
          releaseVersion: ${{inputs.release-version}}
      - id: node
        uses: it-at-m/lhm_actions/action-templates/actions/action-npm-build@main
        with:
          app-path: "${{ inputs.app-path }}"
      - if: "${{ !inputs.skip-deployment }}"
        shell: bash
        working-directory: ./${{inputs.app-path}}
        run: npm --prefix ./${{ inputs.app-path }} publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ inputs.npm-token }} # Centralized token in it-at-m GitHub organization

  build-image:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: it-at-m/lhm_actions/action-templates/actions/action-build-image@6b19f8dd2bee160bee82bde4fa04ac9f6c1d5e1e # v1.0.5
        with:
          path: "${{ inputs.app-path }}"
          image-name: "${{ inputs.app-path }}"
          artifact-name: ${{ needs.release.outputs.ARTIFACT_NAME }}
          registry-password: ${{ secrets.GITHUB_TOKEN }}
          registry-username: ${{ github.actor }}
          image-tags: |
            type=semver,pattern={{version}},value=${{ needs.release.outputs.ARTIFACT_VERSION }}
            type=raw,value=latest
  create-github-release:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Release
        id: create_release
        uses: it-at-m/lhm_actions/action-templates/actions/action-create-github-release@6b19f8dd2bee160bee82bde4fa04ac9f6c1d5e1e # v1.0.5
        with:
          artifact-name: ${{ needs.release.outputs.ARTIFACT_NAME }}
          tag-name: ${{ needs.release.outputs.ARTIFACT_VERSION }}
